name: SpecflowLivingDocHTMLReports

on: 
  pull_request:
    types:
      - opened
      - synchronize
  
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
        - uses: actions/checkout@v4
        - name: Setup .NET 6.x
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: '6.x'
        - name: Install dependencies
          run: dotnet restore
          
        - name: Test with dotnet test
          run: dotnet test "SampleProject.csproj" --no-build --verbosity normal

        - name: create html living doc report from json
          run: |
                dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
                livingdoc feature-folder "Features" -t "bin/Debug/net6.0/TestExecution.json"  

        - name: Living Doc HTML Reports
          uses: actions/upload-artifact@v4
          with:
              name: LivingDocHTML
              path: "LivingDoc.html"  

        - name: Get Artifact ID
          id: get_artifact_id
          run: |
                ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" \
                        "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts" \
                        | jq -r '.artifacts[0].id')
                echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV

        
        - name: Get artifact link
          run: echo "ARTIFACT_LINK={https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/artifacts/${ARTIFACT_ID}}" >> $GITHUB_ENV
       
        - name: Output artifact link
          run: echo "$ARTIFACT_LINK"
             
        - name: Get Jira issue key
          id: get-issue-key
          run: | 
               title="${{ github.event.pull_request.title }}"
               IFS='|' read -ra title_parts <<< "$title"
               echo "issue-key=$(echo ${title_parts[0]} | sed 's/^\\[\\(\\w\\+-\\d+\\)\\].*/\\1/')" >> $GITHUB_OUTPUT
  
        - name: Check issue key value
          run: echo ${{ steps.get-issue-key.outputs.issue-key }}
        
        - name: Login
          uses: atlassian/gajira-login@v3
          env:
             JIRA_BASE_URL: https://onbe-sandbox-213.atlassian.net
             JIRA_USER_EMAIL: ${{ secrets.GITHUBEMAIL }}
             JIRA_API_TOKEN: ${{ secrets.JIRAAPITOKEN }}

          
        - name: Jira Add Comment
          uses: atlassian/gajira-comment@v3
          with:
           issue: ${{ steps.get-issue-key.outputs.issue-key }}
           comment: Check Report in the git artifact link ${{ env.ARTIFACT_LINK }}.

              
                

