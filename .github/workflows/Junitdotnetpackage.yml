
name: Junit dotnet package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
        - uses: actions/checkout@v4
        - name: Setup .NET 6.x
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '6.x'
        - name: Install dependencies
          run: dotnet restore
        - name: Test with dotnet test
          run: dotnet test "SampleProject.csproj" --no-build --verbosity normal --logger:"junit;LogFilePath=test-result.xml"
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v3
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: "test-result.xml"
          # Use always() to always run this step to publish test results when there are test failures
            #if: ${{ always() }}
        - name: git action adding test report
          run: |
               git config --global user.email "aravindan.kaivalliam@onbe.com"
               git config --global user.name "Aravindan211991"
               git commit -a -m "Adding Latest Junit Report file"
               git push   
        - name: Upload Junit results in BrowserStack
          run: |
                curl -u "aravindankaivall_PNYOyz:2BLy51auFkVfaKgDv6jk" -vvv \
                     -X POST \
                     -F 'data=@"test-result.xml"' \
                     -F "projectName=Junit report uploads" \
                     -F "buildName=Observability Sample" \
                https://upload-observability.browserstack.com/upload > file.txt

        - name: git action adding test report
          run: |
               git config --global user.email "aravindan.kaivalliam@onbe.com"
               git config --global user.name "Aravindan211991"
               git add .
               git commit -a -m "Adding file.txt"
               git push 

        - name: Search for string that starts with "https://observability.browserstack.com/builds" and save to variable
          run: MY_VAR=$(grep "^https://observability.browserstack.com/builds" file.txt)
          env:
            MY_VAR: ${{ steps.search-for-string.outputs.my-var }}

        - name: Search for sub-string between "https://observability.browserstack.com/builds" and ""}" in file and save to variable
          run: MY_VAR=$(grep -o "https://observability.browserstack.com/builds.*\"}" file.txt)
          env:
            MY_VAR: ${{ steps.search-for-substring.outputs.my-var }}
            
        - name: Print variable
          run: echo $MY_VAR
        
    
