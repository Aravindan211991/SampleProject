
name: Junit dotnet package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
        - uses: actions/checkout@v4
        - name: Setup .NET 6.x
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '6.x'
        - name: Install dependencies
          run: dotnet restore
        - name: Test with dotnet test
          run: dotnet test "SampleProject.csproj" --no-build --verbosity normal --logger:"junit;LogFilePath=test-result.xml"
          
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v3
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: "test-result.xml"
          # Use always() to always run this step to publish test results when there are test failures
            #if: ${{ always() }}
        - name: git action adding test report
          run: |
               git config --global user.email "aravindan.kaivalliam@onbe.com"
               git config --global user.name "Aravindan211991"
               git commit -a -m "Adding Latest Junit Report file"
               git pull
               git push   
        - name: Upload Junit results in BrowserStack and print the logs in a file
          run: |
                curl -u "aravindankaivall_PNYOyz:2BLy51auFkVfaKgDv6jk" -vvv \
                     -X POST \
                     -F 'data=@"test-result.xml"' \
                     -F "projectName=Junit report uploads" \
                     -F "buildName=Observability Sample" \
                https://upload-observability.browserstack.com/upload > file.txt

        - name: git action Pushing results file containing browserstack test observability link in github
          run: |
               git config --global user.email "aravindan.kaivalliam@onbe.com"
               git config --global user.name "Aravindan211991"
               git add .
               git commit -a -m "Adding file.txt"
               git push 

        - name: Storing browserstack test observability link in a variable
          run: |
               my_var=$(grep -oP '(?<=seconds).*?(?=})' file.txt)
               final_browserstack_test_observability_link=$(echo "$my_var" | tr -d '"')
               echo "Browserstack test observability link is : " $final_browserstack_test_observability_link


        - name: Login
          uses: atlassian/gajira-login@v3
          env:
             JIRA_BASE_URL: https://onbe-sandbox-213.atlassian.net/jira/software/c/projects/AA/boards/61
             JIRA_USER_EMAIL: sulagna.chakraborty@onbe.com
             JIRA_API_TOKEN: ATATT3xFfGF0y2VCG1b9nyrFEd8FLfpMg4IWCYAabRns_47J2ovVXfi5BEN4g8XjO9U848Ffe6thdAJP-ijvyMtRFFueI0C1FUXNvKyYPUD2TEwDW16LFc8-eJ83rDfaysl4L5kGgATzSmfALVsHVnFMV0FdR9gwEJC4K6PT2PQLZJXSR_dORWs=4F5BE391
       
        - name: Create
          id: create
          uses: atlassian/gajira-create@v3
          with:
              project: APEX
              issuetype: Build
              summary: Build completed for ${{ github.repository }}
              description: Compare branch
              fields: '{"customfield_10171": "test"}'

        - name: Log created issue
          run: echo "Issue ${{ steps.create.outputs.issue }} was created"
